{
    "openapi": "3.0.0",
    "info": {
        "title": "Task Manager API",
        "version": "0.1"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Register a new user.",
                "operationId": "registerUser",
                "requestBody": {
                    "description": "User data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "User name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "email",
                                        "example": "john.doe@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully or email already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An email has been sent to your email address. Please verify."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Login user.",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "email",
                                        "example": "john.doe@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged in successfully"
                                        },
                                        "user": {
                                            "type": "object"
                                        },
                                        "authorization": {
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh token",
                "description": "Refresh token.",
                "operationId": "refreshToken",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object"
                                        },
                                        "authorization": {
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Logout user.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get all tasks",
                "description": "Returns all tasks from the system that the user has access to.",
                "operationId": "indexTasks",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter tasks by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "completed",
                                "incompleted",
                                "overdue",
                                "assigned_to_me",
                                "created_by_me",
                                "assigned_to_others",
                                "created_by_others"
                            ]
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Sort tasks by field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "dueDate",
                                "-dueDate",
                                "title",
                                "-title",
                                "completed",
                                "-completed",
                                "createdAt",
                                "-createdAt"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tasks retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TaskResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a task",
                "description": "Create a task",
                "operationId": "storeTasks",
                "requestBody": {
                    "description": "Task object that needs to be created",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Task title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Task description"
                                    },
                                    "assigned_to": {
                                        "description": "User ID or email",
                                        "type": "string",
                                        "example": "9a136676-8ebb-4304-9de9-78bc74ab1d69"
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2021-01-01"
                                    },
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "example": "file.pdf"
                                    },
                                    "completed": {
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "created_by": {
                                        "type": "string",
                                        "example": "9a136676-8ebb-4304-9de9-78bc74ab1d69"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/TaskResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tasks/{task}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Display the specified task",
                "description": "Display the specified task",
                "operationId": "showTasks",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "The ID of the task to be displayed",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forbidden."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update a task",
                "description": "Update a task by ID",
                "operationId": "updateTasks",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Task title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Task description"
                                    },
                                    "assigned_to": {
                                        "description": "User ID or email",
                                        "type": "string",
                                        "example": "9a136676-8ebb-4304-9de9-78bc74ab1d69"
                                    },
                                    "due_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2021-01-01"
                                    },
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "example": "file.pdf"
                                    },
                                    "completed": {
                                        "type": "boolean",
                                        "example": "false"
                                    },
                                    "created_by": {
                                        "type": "string",
                                        "example": "9a136676-8ebb-4304-9de9-78bc74ab1d69"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forbidden."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete a task",
                "description": "Delete a task by ID",
                "operationId": "deleteTask",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Forbidden."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tasks/{task}/file": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Download the file attached to the given task",
                "description": "Download the file attached to the given task",
                "operationId": "downloadFileTasks",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task to download the file from",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File downloaded successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tasks/{task}/complete": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Mark a task as completed",
                "description": "Mark a task as completed and notify the assignee if they are not the creator.",
                "operationId": "completeTask",
                "parameters": [
                    {
                        "name": "task",
                        "in": "path",
                        "description": "ID of the task to complete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "description": "Returns a list of all users",
                "operationId": "getUsers",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/{user}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a user by ID",
                "description": "Returns a single user",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of user to return",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update a user",
                "description": "Update a user by ID",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of user to update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Jane Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "jane.doe@email.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The given data was invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a user",
                "description": "Delete a user by ID",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of user to delete",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This action is unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/email/verify/{id}": {
            "get": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Verify email",
                "description": "Verifies the user email if the email is not verified yet.",
                "operationId": "verify",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirects to the API documentation page."
                    },
                    "401": {
                        "description": "Invalid/Expired url provided.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid/Expired url provided."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/email/resend": {
            "get": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Resend verification email",
                "description": "Resends the verification email if the email is not verified yet.",
                "operationId": "resend",
                "responses": {
                    "200": {
                        "description": "Email verification link sent to the user email address.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verification link sent to the user email address."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email already verified.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email already verified."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "TaskResource": {
                "title": "TaskResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "title": {
                        "type": "string",
                        "example": "Task title"
                    },
                    "description": {
                        "type": "string",
                        "example": "Task description"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-01-01T00:00:00.000000Z"
                    },
                    "due_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2021-01-01"
                    },
                    "completed": {
                        "type": "boolean",
                        "example": "false"
                    },
                    "created_by": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "assigned_to": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "example": "http://localhost:8000/api/tasks/1/file"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "UserResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@email.com"
                    },
                    "is_admin": {
                        "type": "boolean",
                        "example": "false"
                    }
                },
                "type": "object"
            },
            "Role": {
                "title": "Role",
                "description": "The role model provides authorization to users.",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Role id",
                        "format": "uuid",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "name": {
                        "title": "name",
                        "description": "Role name",
                        "type": "string",
                        "example": "admin"
                    },
                    "created_at": {
                        "title": "created_at",
                        "description": "Role created at",
                        "example": "2021-01-01 00:00:00"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "Role updated at",
                        "example": "2021-01-01 00:00:00"
                    }
                },
                "type": "object"
            },
            "Task": {
                "title": "Task",
                "description": "Task model",
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "Task id",
                        "format": "uuid",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "created_by": {
                        "title": "created_by",
                        "description": "User id of the creator",
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "assigned_to": {
                        "title": "assigned_to",
                        "description": "User id of the assignee",
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "title": {
                        "title": "title",
                        "description": "Task title",
                        "type": "string",
                        "example": "Task title"
                    },
                    "description": {
                        "title": "description",
                        "description": "Task description",
                        "type": "string",
                        "example": "Task description"
                    },
                    "due_date": {
                        "title": "due_date",
                        "description": "Task due date",
                        "type": "string",
                        "example": "2021-01-01 00:00:00"
                    },
                    "completed": {
                        "title": "completed",
                        "description": "Task completed",
                        "type": "boolean",
                        "example": "true"
                    },
                    "created_at": {
                        "title": "created_at",
                        "description": "The created at date",
                        "type": "string",
                        "example": "2021-01-01 00:00:00"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "description": "The updated at date",
                        "type": "string",
                        "example": "2021-01-01 00:00:00"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "description": "User id",
                        "format": "uuid",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "name": {
                        "description": "User name",
                        "example": "John Doe"
                    },
                    "email": {
                        "description": "User email",
                        "example": "john.doe@email.com"
                    },
                    "old_email": {
                        "description": "User old email. Used when updating the email address to store the old email address, in case the user cannot verify the new email address.",
                        "example": "john.doe@oldmail.com"
                    },
                    "email_verified_at": {
                        "description": "User email verified at",
                        "example": "2021-01-01 00:00:00"
                    },
                    "password": {
                        "description": "The password hash",
                        "example": "$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi"
                    },
                    "remember_token": {
                        "description": "The remember token",
                        "example": "NzD2RB0pM9"
                    },
                    "created_at": {
                        "description": "The created at date",
                        "example": "2021-01-01 00:00:00"
                    },
                    "updated_at": {
                        "description": "The updated at date",
                        "example": "2021-01-01 00:00:00"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}